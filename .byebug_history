exit
move
king_location
enemy_move.end_square
enemy_move
n
enemy_move
n
move
n
enemy_move
n
enemy_move
n
enemy_move
n
enemy_move
move
exit
move
continue
move
exit
exiy
move
king_location
exit
king_location
move
exit
king_location
exit
king_location
move
exit
n
exit
naive_moves(rank, file, test_board).each { |i| p i.to_s }
exit
naive_moves(rank, file, test_board).each { |i| p i.to_s }
exit
naive_moves(rank, file, test_board).each { |i| p i.to_s }
naive_moves(rank, file, test_board).each { |i| i.to_s }
test_board
move.to_s
exit
continue
exit
test_board
naive_moves(rank, file, test_board).each {|i| p i.to_s }
naive_moves(rank, file, test_board)
file
rank
exit
naive_exit
move
exit
n
move
exit
test_board
n
right_color
move
exit
naive_move
exit
file
filr
rank
exit
move
exit
continue
@white_to_move
exit
@white_to_move
file
rank
exit
right_color?(rank, file)
file
rank
n
!(test_board[rank][file].zero?)
n
!(test_board[rank][file].zero?)
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
n
test_board[rank][file]
continue
test_board[rank][file]
exit
@board
exit
a.object_id
test_board.object_id
@board.object_id
test_board = @board.dup
a = @board.dup
exit
a.object_id
a.object)id
a = @board.dup
@board.dup.object_id
@board.object_id
test_board.object_id
test_board.class
@board.class
exit
@board
exit
@board
test_board[move.end_square[0]][move.end_square[1]]
test_board[move.start_square[0]][move.start_square[1]]
n
test_board[move.start_square[0]][move.start_square[1]]
test_board[move.end_square[0]][move.end_square[1]]
test_board[move.end_square[0]]
move
test_board
exit
continue
king_safe?(naive_move, king_location)
king_location
naive_move
exit
king_location
naive_move
exit
right_color?(rank, file)
exit
right_color?(rank, file)
file
rank
exit
n
exit
@board[rank][file]
exit
rank_inc
rank
file
@board[2][3]
@board[rank + rank_inc][file]
@board[rank + rank_inc][file].zero?
rank_inc
output
n
@board[rank + rank_inc][file].zero?
exit
"#{8 - @start_square[0] }"
"#{(@start_square[1] + 97).chr}"
@start_square
exit
@board[rank][file]
exit
@board[rank + 2 * v_direction][file].zero? && (rank == 1 && color(piece) == "black") || (rank == 6 && color(piece) == "white")
@board[rank + 2 * v_direction][file].zero? &&
@board[rank + 2 * v_direction][file].zero?
n
@board[rank + 2 * v_direction][file]
exit
@board[rank][file]
v_direction
exit
c
n
@board.is_a? Array
!@board.is_a? Array
n
c
@board.is_a? Array
@board
n
params[:board].class
params[:board]
c
continue
params
